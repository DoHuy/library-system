/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.librarian;

import common.controller.BookController;
import common.controller.BookRelaController;
import entity.Book;
import entity.Category;
import entity.Copy;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Lớp bao thêm sách
 *
 * @author Raph
 */
public class AddBookForm extends javax.swing.JPanel {

    /**
     * Creates new form AddBookForm
     */
    public AddBookForm() {
        initComponents();
        loadCategory();
        jLabelAlert.setVisible(false);
        jButtonNew.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxCategory = new javax.swing.JComboBox<>();
        jTextFieldBookName = new javax.swing.JTextField();
        jTextFieldAuthor = new javax.swing.JTextField();
        jTextFieldPublisher = new javax.swing.JTextField();
        jTextFieldISBN = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonOK = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButtonDestroyCopy = new javax.swing.JButton();
        jButtonCreateNewCopy = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelAlert = new javax.swing.JLabel();
        jButtonNew = new javax.swing.JButton();

        jLabel1.setText("Tiêu đề:");

        jLabel2.setText("Tác giả:");

        jLabel3.setText("Nhà phát hành:");

        jLabel4.setText("ISBN:");

        jLabel5.setText("Thể loại:");

        jTextFieldBookName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBookNameKeyTyped(evt);
            }
        });

        jTextFieldAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAuthorKeyTyped(evt);
            }
        });

        jTextFieldPublisher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPublisherKeyTyped(evt);
            }
        });

        jTextFieldISBN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldISBNKeyTyped(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số thứ tự", "Loại bản sao", "Trạng thái", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButtonOK.setText("Hoàn tất");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jLabel6.setText("Tạo danh sách bản sao");

        jButtonDestroyCopy.setText("Hủy bản sao");
        jButtonDestroyCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDestroyCopyActionPerformed(evt);
            }
        });

        jButtonCreateNewCopy.setText("Tạo mới 1 bản sao");
        jButtonCreateNewCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateNewCopyActionPerformed(evt);
            }
        });

        jLabel7.setText("Loại bản sao:");

        jLabel8.setText("1, 2, 3");

        jLabelAlert.setForeground(new java.awt.Color(255, 0, 0));
        jLabelAlert.setText("jLabel9");

        jButtonNew.setText("Tạo thêm sách");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel5)))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldBookName)
                                    .addComponent(jTextFieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldPublisher)
                                    .addComponent(jTextFieldISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129)
                                .addComponent(jLabelAlert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonNew))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonCreateNewCopy)
                                .addGap(52, 52, 52)
                                .addComponent(jButtonDestroyCopy))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAlert)
                    .addComponent(jButtonNew))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jButtonDestroyCopy)
                    .addComponent(jButtonCreateNewCopy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButtonOK))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))))
                .addGap(47, 47, 47))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     */
    private void loadCategory() {
        try {
            list = BookRelaController.getInstance().loadCategory();
            DefaultComboBoxModel model = (DefaultComboBoxModel) jComboBoxCategory.getModel();
            list.stream().forEach((c) -> {
                model.addElement(c.getCategory_name());
            });
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddBookForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void jButtonCreateNewCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateNewCopyActionPerformed
        // TODO add your handling code here:
        numberOfCopy++;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{numberOfCopy, 1, "Available", 0});
    }//GEN-LAST:event_jButtonCreateNewCopyActionPerformed

    private void jButtonDestroyCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDestroyCopyActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.removeRow(row);
        jTable1.repaint();
        jTable1.validate();

        numberOfCopy--;
        for (int i = 1; i <= numberOfCopy; i++) {
            model.setValueAt(i, i - 1, 0);
        }

    }//GEN-LAST:event_jButtonDestroyCopyActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        // TODO add your handling code here:
        action();

    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jTextFieldBookNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBookNameKeyTyped
        // TODO add your handling code here:
        jLabelAlert.setVisible(false);
    }//GEN-LAST:event_jTextFieldBookNameKeyTyped

    private void jTextFieldPublisherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPublisherKeyTyped
        // TODO add your handling code here:
        jLabelAlert.setVisible(false);
    }//GEN-LAST:event_jTextFieldPublisherKeyTyped

    private void jTextFieldAuthorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAuthorKeyTyped
        // TODO add your handling code here:
        jLabelAlert.setVisible(false);
    }//GEN-LAST:event_jTextFieldAuthorKeyTyped

    private void jTextFieldISBNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldISBNKeyTyped
        // TODO add your handling code here:
        jLabelAlert.setVisible(false);
    }//GEN-LAST:event_jTextFieldISBNKeyTyped

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        // TODO add your handling code here:
        jTextFieldBookName.setText("");
        jTextFieldAuthor.setText("");
        jTextFieldPublisher.setText("");
        jTextFieldISBN.setText("");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        newAuthor.clear();
        existAuthor.clear();
        numberOfCopy = 0;
    }//GEN-LAST:event_jButtonNewActionPerformed

    /**
     * Action thêm sách
     */
    private void action() {
        int index = jComboBoxCategory.getSelectedIndex();

        int categoryId = list.get(index).getCategory_id();
        String categoryName = list.get(index).getCategory_name();
        String categoryCode = list.get(index).getCategory_code();
        int num = list.get(index).getNumberOfBook();

        if (check()) {

            newAuthor.clear();
            existAuthor.clear();

            String bookName = jTextFieldBookName.getText();
            String author = jTextFieldAuthor.getText();
            String publisher = jTextFieldPublisher.getText();
            String isbn = jTextFieldISBN.getText();

            try {
                String bookNameValue = BookController.getInstance().checkBook(bookName.trim());
                if (bookNameValue != null) {
                    JOptionPane.showMessageDialog(this, "Sách đã tồn tại", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                } else {
                    String listAuthor[] = author.split(",");
                    for (String s : listAuthor) {
                        String authorValue = BookRelaController.getInstance().checkAuthor(s.trim());
                        if (authorValue != null) {
                            existAuthor.add(authorValue);
                            System.out.println("Exist");
                        } else {
                            newAuthor.add(s.trim());
                            System.out.println("New one");
                        }
                    }

                    for (String newA : newAuthor) {
                        BookRelaController.getInstance().addNewAuthor(newA);
                        existAuthor.add(newA);
                    }

                    String publisherValue = BookRelaController.getInstance().checkPublisher(publisher);
                    int publisherId;
                    if (publisherValue != null) {
                        publisherId = BookRelaController.getInstance().getPubliserId(publisherValue);
                    } else {
                        // new
                        BookRelaController.getInstance().addNewPublisher(publisher);
                        publisherId = BookRelaController.getInstance().getPubliserId(publisher);
                    }

                    String bookId = handleCode(num + 1, categoryCode);
                    BookController.getInstance().addNewBook(new Book(bookId, bookName, categoryId, publisherId, isbn));
                    BookRelaController.getInstance().updateNum(num + 1, categoryName);

                    // do stuff here
                    for (String exist : existAuthor) {
                        int authorId = BookRelaController.getInstance().getAuthorId(exist);
                        BookRelaController.getInstance().addNewAuthorHasBook(authorId, bookId);
                    }

                    addCopy(bookId);

                    JOptionPane.showMessageDialog(this, "Thêm sách thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    jButtonNew.setVisible(true);
                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(AddBookForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    /**
     *
     * @param bookId
     */
    private void addCopy(String bookId) {
        int status = 1;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            int orderNumber = (int) model.getValueAt(i, 0);
            int typeOfCopy = (int) model.getValueAt(i, 1);
            double price = (double) model.getValueAt(i, 3);

            String copyId = handleCopyId(orderNumber, bookId);

            try {
                BookController.getInstance().addNewCopy(new Copy(copyId, orderNumber, typeOfCopy, status, bookId, price));
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(AddBookForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     *
     * @return
     */
    private boolean check() {
        String bookName = jTextFieldBookName.getText();
        String author = jTextFieldAuthor.getText();
        String publisher = jTextFieldPublisher.getText();
        String isbn = jTextFieldISBN.getText();

        if (bookName.isEmpty()) {
            jLabelAlert.setText("Tên sách trống");
            jLabelAlert.setVisible(true);
            return false;
        } else if (author.isEmpty()) {
            jLabelAlert.setText("Tác giả trống");
            jLabelAlert.setVisible(true);
            return false;
        } else if (publisher.isEmpty()) {
            jLabelAlert.setText("Nhà phát hành trống");
            jLabelAlert.setVisible(true);
            return false;
        } else if (isbn.isEmpty()) {
            jLabelAlert.setText("ISBN trống");
            jLabelAlert.setVisible(true);
            return false;
        } else if (isbn.toCharArray().length != 7) {
            jLabelAlert.setText("ISBN không đủ 7 ký tự");
            jLabelAlert.setVisible(true);
            return false;
        } else {
            return true;
        }
    }

    /**
     *
     * @param num
     * @param categoryCode
     * @return
     */
    private String handleCode(int num, String categoryCode) {
        int length = String.valueOf(num).toCharArray().length;
        String bookId = null;
        switch (length) {
            case 1: {
                bookId = categoryCode + "000" + num;
                break;
            }

            case 2: {
                bookId = categoryCode + "00" + num;
                break;
            }

            case 3: {
                bookId = categoryCode + "0" + num;
                break;
            }

            default: {
                bookId = categoryCode + num;
                break;
            }
        }

        return bookId;
    }

    /**
     *
     * @param orderNumber
     * @param bookId
     * @return
     */
    private String handleCopyId(int orderNumber, String bookId) {
        int length = String.valueOf(orderNumber).toCharArray().length;
        String copyId = null;
        switch (length) {
            case 1: {
                copyId = "0" + orderNumber + bookId;
                break;
            }

            default: {
                copyId = orderNumber + bookId;
                break;
            }
        }

        return copyId;
    }

    private int numberOfCopy = 0;
    private ArrayList<Category> list = new ArrayList<>();
    private ArrayList<String> newAuthor = new ArrayList<>();
    private ArrayList<String> existAuthor = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreateNewCopy;
    private javax.swing.JButton jButtonDestroyCopy;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JComboBox<String> jComboBoxCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelAlert;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldAuthor;
    private javax.swing.JTextField jTextFieldBookName;
    private javax.swing.JTextField jTextFieldISBN;
    private javax.swing.JTextField jTextFieldPublisher;
    // End of variables declaration//GEN-END:variables
}
