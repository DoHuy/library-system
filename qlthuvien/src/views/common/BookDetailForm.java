/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.common;

import common.controller.BookController;
import common.controller.CardController;
import common.controller.TaskController;
import entity.Card;
import entity.Copy;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import librarian.boundary.EditBookForm;

/**
 * Lớp bao xem thông tin chi tiết cuốn sách, các bản sao hiện có của nó
 *
 * @author Raph
 */
public class BookDetailForm extends javax.swing.JPanel {

    /**
     * Hàm khởi tạo riêng để dễ dàng truyền từ một giao diện khác
     *
     * @param maSach : mã sách
     * @param tenSach : tên sách
     * @param theLoai : thể loại
     * @param tacGia : tác giả
     * @param nhaPhatHanh : nhà phát hành
     * @param isbn : ISBN
     * @param type
     */
    public BookDetailForm(String maSach, String tenSach, String theLoai, String tacGia, String nhaPhatHanh, String isbn, int type) {
        initComponents();
        configLabel(maSach, tenSach, theLoai, tacGia, nhaPhatHanh, isbn);
        this.type = type;
        if (type == MainForm.LIBARIAN_USERNAME) {
            jButtonModify.setVisible(true);
        } else {
            jButtonModify.setVisible(false);
        }

        lblCopyStatus.setVisible(false);
        genCopy(maSach);
    }

    /**
     * Cấu hình lại label hiển thị
     *
     * @param maSach
     * @param tenSach
     * @param theLoai
     * @param tacGia
     * @param nhaPhatHanh
     * @param isbn
     */
    private void configLabel(String maSach, String tenSach, String theLoai, String tacGia, String nhaPhatHanh, String isbn) {
        setBookId(maSach);
        setBookName(tenSach);
        setCategory(theLoai);
        setAuthor(tacGia);
        setPublisher(nhaPhatHanh);
        setISBN(isbn);
    }

    /**
     * Generate các bản sao theo mã sách
     *
     * @param maSach : mã sách
     */
    
    private void genCopy(String maSach) {
        ArrayList<Copy> copys = new ArrayList<>();
        Vector<Object> row;

        try {
            copys = BookController.getInstance().searchCopyByBookId(maSach);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BookDetailForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (!copys.isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            for (Copy copy : copys) {
                row = new Vector<>();
                row.add(copy.getCopyId());
                row.add(copy.getOrderNumber());
                row.add(copy.getType());
                row.add(translateCopyStatus(copy.getStatus()));
                row.add(copy.getPrice());
                model.addRow(row);
            }
        } else {
            lblCopyStatus.setVisible(true);
        }
    }

    /**
     * Chuyển đổi từ trạng thái kiểu int (trong csdl) ra chuỗi
     *
     * @param status : trạng thái
     * @return String chuỗi được chuyển đổi
     */
    private String translateCopyStatus(int status) {
        String s = null;
        switch (status) {
            case Copy.AVAILABLE:
                s = "Available";
                break;
            case Copy.PENDING:
                s = "Pending";
                break;
            case Copy.BORROWED:
                s = "Borrowed";
                break;
            case Copy.LENT:
                s = "Lent";
                break;
        }

        return s;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbBookId = new javax.swing.JLabel();
        lbBookName = new javax.swing.JLabel();
        lbAuthor = new javax.swing.JLabel();
        lbPublisher = new javax.swing.JLabel();
        lbISBN = new javax.swing.JLabel();
        lblCopyStatus = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelCategory = new javax.swing.JLabel();
        jButtonModify = new javax.swing.JButton();

        jLabel1.setText("Mã sách: ");

        jLabel2.setText("Tiêu đề: ");

        jLabel3.setText("Tác giả: ");

        jLabel4.setText("Nhà xuất bản: ");

        jLabel5.setText("Các bản sao: ");

        jLabel6.setText("ISBN:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã bản sao", "Thứ tự", "Loại bản sao", "Trạng Thái", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        lbBookId.setText("jLabel7");

        lbBookName.setText("jLabel7");

        lbAuthor.setText("jLabel7");

        lbPublisher.setText("jLabel7");

        lbISBN.setText("jLabel7");

        lblCopyStatus.setForeground(new java.awt.Color(251, 0, 0));
        lblCopyStatus.setText("Không tìm thấy bất cứ bản sao nào");

        jLabel7.setFont(new java.awt.Font("UTM Copperplate", 1, 24)); // NOI18N
        jLabel7.setText("Thông tin sách");

        jLabel8.setText("Thể loại:");

        jLabelCategory.setText("jLabel9");

        jButtonModify.setText("Sửa");
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbISBN)
                                    .addComponent(lbPublisher)
                                    .addComponent(lbAuthor)
                                    .addComponent(jLabelCategory)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel5))
                                    .addGap(41, 41, 41)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbBookId)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButtonModify, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lblCopyStatus)
                                        .addComponent(lbBookName)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel7)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbBookId)
                    .addComponent(jButtonModify))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbBookName))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabelCategory))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbAuthor))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbPublisher))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbISBN))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblCopyStatus))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Mỗi lần click chuột vào 1 hàng để chọn bản sao muốn mượn :v
     *
     * @param evt : sự kiện click
     */
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        // TODO add your handling code here:
        if (type == MainForm.BORROWER_USERNAME) {
            int row = jTable1.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            String status = model.getValueAt(row, 3).toString();
            if (!status.equalsIgnoreCase("Available")) {
                JOptionPane.showMessageDialog(this, "Bạn không thể đăng ký mượn bản sao này", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            } else {
                String maBanSao = model.getValueAt(row, 0).toString();
                String username = MainForm.getUsername();

                try {
                    int cardId = CardController.getInstance().findCardId(username);
                    if (cardId == -1) {
                        JOptionPane.showMessageDialog(this, "Không thẻ mượn tồn tại", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                    } else {

                        int cardStatus = CardController.getInstance().getCardStatus(cardId);
                        switch (cardStatus) {
                            case Card.EXPIRED:
                                JOptionPane.showMessageDialog(this, "Thẻ quá hạn sử dụng", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                                break;
                            case Card.ACTIVE:
                                int numberOfCopyBorrowed = TaskController.getInstance().findRegistrationInfoOverCardId(cardId).size();
                                if (numberOfCopyBorrowed < 5) {
                                    try {
                                        BookController.getInstance().updateCopyStatus(maBanSao, Copy.PENDING);   // Pending
                                        TaskController.getInstance().addRegistrationInfor(cardId, maBanSao);
                                        JOptionPane.showMessageDialog(this, "Đăng ký mượn thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                                        model.setValueAt("Pending", row, 3); // pending
                                    } catch (ClassNotFoundException | SQLException ex) {
                                        Logger.getLogger(BookDetailForm.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Quá 5 bản sao được phép đăng ký mượn", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                                }
                                break;
                            default:
                                JOptionPane.showMessageDialog(this, "Thẻ bị hủy khả dụng", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                                break;
                        }
                    }

                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(BookDetailForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        // TODO add your handling code here:
        EditBookForm editForm = new EditBookForm(new javax.swing.JFrame(), true, lbBookId.getText(), 
                lbBookName.getText(), jLabelCategory.getText(), lbAuthor.getText(), lbPublisher.getText(), lbISBN.getText());
        editForm.setVisible(true);
        if(editForm.isHitOK()){
            System.out.println("OKKKKKKKKK");
            lbBookName.setText(editForm.getTFName());
            jLabelCategory.setText(editForm.getCategoryName());
            lbAuthor.setText(editForm.getAuthorValue());
            lbPublisher.setText(editForm.getPublisherValue());
            lbISBN.setText(editForm.getISBNValue());
        }
    }//GEN-LAST:event_jButtonModifyActionPerformed

    /**
     * Hàm thiết lập label mã sách
     *
     * @param id : mã sách
     */
    public void setBookId(String id) {
        lbBookId.setText(id);
    }

    /**
     * Hàm thiết lập label tên sách
     *
     * @param name : tên sách
     */
    public void setBookName(String name) {
        lbBookName.setText(name);
    }

    /**
     * Hàm thiết lập label thể loại
     *
     * @param category
     */
    public void setCategory(String category) {
        jLabelCategory.setText(category);
    }

    /**
     * Hàm thiết lập label tác giả
     *
     * @param author : tác giả
     */
    public void setAuthor(String author) {
        lbAuthor.setText(author);
    }

    /**
     * Hàm thiết lập label nhà phát hành
     *
     * @param publisher : nhà phát hành
     */
    public void setPublisher(String publisher) {
        lbPublisher.setText(publisher);
    }

    /**
     * Hàm thiết lập label ISBN
     *
     * @param isbn
     */
    public void setISBN(String isbn) {
        lbISBN.setText(isbn);
    }

    private int type;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonModify;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelCategory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbAuthor;
    private javax.swing.JLabel lbBookId;
    private javax.swing.JLabel lbBookName;
    private javax.swing.JLabel lbISBN;
    private javax.swing.JLabel lbPublisher;
    private javax.swing.JLabel lblCopyStatus;
    // End of variables declaration//GEN-END:variables
}
